  # Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug'


- task: AndroidSigning@2
  inputs:
    apkFiles: '**/*.apk'
    jarsign: true
    jarsignerKeystoreFile: 'C:\Users\740108\Desktop\Android_keys\keystore.jks'
    jarsignerKeystorePassword: '$(Android)'
    jarsignerKeystoreAlias: 'upload'
    jarsignerKeyPassword: '$(Android)'
    zipalign: true

      # App Center test
      # Test app packages with Visual Studio App Center
      - task: AppCenterTest@1
        inputs:
          appFile:
          #artifactsDirectory: '$(Build.ArtifactStagingDirectory)/AppCenterTest'
          #prepareTests: true # Optional
          #frameworkOption: 'appium' # Required when prepareTests == True# Options: appium, espresso, calabash, uitest, xcuitest
          #appiumBuildDirectory: # Required when prepareTests == True && Framework == Appium
          #espressoBuildDirectory: # Optional
          #espressoTestApkFile: # Optional
          #calabashProjectDirectory: # Required when prepareTests == True && Framework == Calabash
          #calabashConfigFile: # Optional
          #calabashProfile: # Optional
          #calabashSkipConfigCheck: # Optional
          #uiTestBuildDirectory: # Required when prepareTests == True && Framework == Uitest
          #uitestStorePath: # Optional
          #uiTestStorePassword: # Optional
          #uitestKeyAlias: # Optional
          #uiTestKeyPassword: # Optional
          #uiTestToolsDirectory: # Optional
          #signInfo: # Optional
          #xcUITestBuildDirectory: # Optional
          #xcUITestIpaFile: # Optional
          #prepareOptions: # Optional
          #runTests: true # Optional
          #credentialsOption: 'serviceEndpoint' # Required when runTests == True# Options: serviceEndpoint, inputs
          #serverEndpoint: # Required when runTests == True && CredsType == ServiceEndpoint
          #username: # Required when runTests == True && CredsType == Inputs
          #password: # Required when runTests == True && CredsType == Inputs
          #appSlug: # Required when runTests == True
          #devices: # Required when runTests == True
          #series: 'master' # Optional
          #dsymDirectory: # Optional
          #localeOption: 'en_US' # Required when runTests == True# Options: da_DK, nl_NL, en_GB, en_US, fr_FR, de_DE, ja_JP, ru_RU, es_MX, es_ES, user
          #userDefinedLocale: # Optional
          #loginOptions: # Optional
          #runOptions: # Optional
          #skipWaitingForResults: # Optional
          #cliFile: # Optional
          #showDebugOutput: # Optional


      - task: CopyFiles@2
        inputs:
          contents: '**/*.apk'
          targetFolder: '$(build.artifactStagingDirectory)'
      - task: PublishBuildArtifacts@1


      # App Center distribute
      # Distribute app builds to testers and users via Visual Studio App Center
      - task: AppCenterDistribute@1
        inputs:
          serverEndpoint:
          appSlug:
          appFile:
          #symbolsOption: 'Apple' # Optional. Options: apple
          #symbolsPath: # Optional
          #symbolsPdbFiles: '**/*.pdb' # Optional
          #symbolsDsymFiles: # Optional
          #symbolsMappingTxtFile: # Optional
          #symbolsIncludeParentDirectory: # Optional
          #releaseNotesOption: 'input' # Options: input, file
          #releaseNotesInput: # Required when releaseNotesOption == Input
          #releaseNotesFile: # Required when releaseNotesOption == File
          #isMandatory: false # Optional
          #distributionGroupId: # Optional

            - task: GooglePlayPromote@2
              inputs:
                packageName: 'com.example.devops_script_automation'
                serviceEndpoint: 'yourGooglePlayServiceConnectionName'
                sourceTrack: 'internal'
                destinationTrack: 'alpha'